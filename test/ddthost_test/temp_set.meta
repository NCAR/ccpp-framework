[ccpp-table-properties]
  name = temp_set
  type = scheme
[ccpp-arg-table]
  name = temp_set_run
  type = scheme
  process = setter
[ ncol ]
  standard_name = horizontal_loop_extent
  type = integer
  units = count
  dimensions = ()
  intent = in
[ lev ]
  standard_name = vertical_layer_dimension
  type = integer
  units = count
  dimensions = ()
  intent = in
[ timestep ]
  standard_name = time_step_for_physics
  long_name = time step
  units = s
  dimensions = ()
  type = real
  kind = kind_phys
  intent = in
[ temp_level ]
  standard_name = potential_temperature_at_interface
  units = K
  dimensions = (ccpp_constant_one:horizontal_loop_extent, vertical_interface_dimension)
  type = real
  kind = kind_phys
  intent = inout
[ temp ]
  standard_name = potential_temperature
  units = K
  dimensions = (horizontal_loop_extent, vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = out
[ ps ]
  standard_name = surface_air_pressure
  state_variable = true
  type = real
  kind = kind_phys
  units = Pa
  dimensions = (horizontal_loop_extent)
  intent = in
[ to_promote ]
  standard_name = promote_this_variable_to_suite
  units = K
  dimensions = (horizontal_loop_extent, vertical_layer_dimension)
  type = real
  kind = kind_phys
  intent = out
[ promote_pcnst ]
  standard_name = promote_this_variable_with_no_horizontal_dimension
  units = K
  dimensions = (number_of_tracers)
  type = real
  kind = kind_phys
  intent = out
[ errmsg ]
  standard_name = ccpp_error_message
  long_name = Error message for error handling in CCPP
  units = none
  dimensions = ()
  type = character
  kind = len=512
  intent = out
[ errflg ]
  standard_name = ccpp_error_code
  long_name = Error flag for error handling in CCPP
  units = 1
  dimensions = ()
  type = integer
  intent = out
# Init
[ccpp-arg-table]
  name = temp_set_init
  type = scheme
[ temp_inc_in ]
  standard_name = potential_temperature_increment
  long_name = Per time step potential temperature increment
  units = K
  dimensions = ()
  type = real
  kind = kind_phys
  intent = in
[ fudge ]
  standard_name = random_fudge_factor
  long_name = Ignore this
  units = 1
  dimensions = ()
  type = real
  kind = kind_phys
  intent = in
  default_value = 1.0_kind_phys
[ temp_inc_set ]
  standard_name = test_potential_temperature_increment
  long_name = Per time step potential temperature increment
  units = K
  dimensions = ()
  type = real
  kind = kind_phys
  intent = out
[ errmsg ]
  standard_name = ccpp_error_message
  long_name = Error message for error handling in CCPP
  units = none
  dimensions = ()
  type = character
  kind = len=512
  intent = out
[ errflg ]
  standard_name = ccpp_error_code
  long_name = Error flag for error handling in CCPP
  units = 1
  dimensions = ()
  type = integer
  intent = out
# Timestep Initialization
[ccpp-arg-table]
  name = temp_set_timestep_initialize
  type = scheme
[ ncol ]
  standard_name = horizontal_dimension
  type = integer
  units = count
  dimensions = ()
  intent = in
[ temp_inc ]
  standard_name = test_potential_temperature_increment
  long_name = Per time step potential temperature increment
  units = K
  dimensions = ()
  type = real
  kind = kind_phys
  intent = in
[ temp_level ]
  standard_name = potential_temperature_at_interface
  units = K
  dimensions = (horizontal_dimension, vertical_interface_dimension)
  type = real
  kind = kind_phys
  intent = inout
[ errmsg ]
  standard_name = ccpp_error_message
  long_name = Error message for error handling in CCPP
  units = none
  dimensions = ()
  type = character
  kind = len=512
  intent = out
[ errflg ]
  standard_name = ccpp_error_code
  long_name = Error flag for error handling in CCPP
  units = 1
  dimensions = ()
  type = integer
  intent = out
# Finalize
[ccpp-arg-table]
  name = temp_set_finalize
  type = scheme
[ errmsg ]
  standard_name = ccpp_error_message
  long_name = Error message for error handling in CCPP
  units = none
  dimensions = ()
  type = character
  kind = len=512
  intent = out
[ errflg ]
  standard_name = ccpp_error_code
  long_name = Error flag for error handling in CCPP
  units = 1
  dimensions = ()
  type = integer
  intent = out
